<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eleme.mapper.ops.user.ResourceMapper">

	<resultMap id="ResourceResultMap" type="com.eleme.domain.ops.user.Resource">
		<id column="RESOURCE_ID" property="resourceId" jdbcType="INTEGER" />
		<result column="RESOURCE_NAME" property="resourceName"
			jdbcType="VARCHAR" />
		<result column="RESOURCE_DESC" property="resourceDesc"
			jdbcType="VARCHAR" />
		<result column="RESOURCE_TYPE" property="resourceType"
			jdbcType="VARCHAR" />
		<result column="RESOURCE_STRING" property="resourceString"
			jdbcType="VARCHAR" />
		<result column="IS_ENABLED" property="isEnabled" jdbcType="CHAR" />
		<result column="SORT_INDEX" property="sortIndex" jdbcType="INTEGER" />
		<result column="SHOW_NAV" property="showNav" jdbcType="CHAR" />
		<result column="PARENT_ID" property="parentId" jdbcType="INTEGER" />
		<result column="GRADE" property="grade" jdbcType="CHAR" />
		<result column="PRJ_TYPE" property="prjType" jdbcType="CHAR" />
		<result column="CREATE_USER" property="createUser" jdbcType="INTEGER" />
		<result column="CREATED_AT" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="UPDATED_AT" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="PARENT_NAME" property="parentName" jdbcType="VARCHAR" />
		<result column="PARENT_STRING" property="parentString" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Resource_Column_List">
		m.RESOURCE_ID, m.RESOURCE_NAME, m.RESOURCE_DESC, m.RESOURCE_TYPE,
		m.RESOURCE_STRING, m.IS_ENABLED,
		m.SORT_INDEX, m.SHOW_NAV, m.PARENT_ID,
		m.GRADE,
		m.PRJ_TYPE, m.CREATE_USER, m.CREATED_AT, m.UPDATED_AT
	</sql>

	<select id="countResourceList" resultType="java.lang.Integer"
		parameterType="com.eleme.domain.ops.user.ResourceQueryBean">
		select count(*) from M_RESOURCE m
		<include refid="where_ResourceList" />
	</select>

	<select id="queryResourceList" resultMap="ResourceResultMap"
		parameterType="com.eleme.domain.ops.user.ResourceQueryBean">
		select
		<include refid="Resource_Column_List" />, mr.RESOURCE_NAME as PARENT_NAME,
		mr.RESOURCE_STRING as PARENT_STRING
		from M_RESOURCE m left join M_RESOURCE mr
		on m.PARENT_ID = mr.RESOURCE_ID
		<include refid="where_ResourceList" />
		limit #{offset}, #{limit}
	</select>

	<sql id="where_ResourceList">
		<where>
			m.PRJ_TYPE = '0'
			<if test="resourceName != null and resourceName != ''">
				and m.RESOURCE_NAME like concat('%', #{resourceName}, '%')
			</if>
			<if test="parentId != null">
				and m.PARENT_ID = #{parentId}
			</if>
			<if test="isEnabled != null and isEnabled != ''">
				and m.IS_ENABLED = #{isEnabled}
			</if>
			<if test="createUser != null">
				and m.CREATE_USER = #{createUser}
			</if>
			<if test="createdFrom != null">
				and <![CDATA[ date(m.CREATED_AT) >= date(#{createdFrom}) ]]>
			</if>
			<if test="createdTo != null">
				and <![CDATA[ date(m.CREATED_AT) <= date(#{createdTo}) ]]>
			</if>
			<if test="updatedFrom != null">
				and <![CDATA[ date(m.UPDATED_AT) >= date(#{updatedFrom}) ]]>
			</if>
			<if test="updatedTo != null">
				and <![CDATA[ date(m.UPDATED_AT) >= date(#{createdTo}) ]]>
			</if>
		</where>
	</sql>

	<select id="queryResourceById" resultMap="ResourceResultMap"
		parameterType="java.lang.Integer">
		select
		r.RESOURCE_ID, r.RESOURCE_NAME, r.RESOURCE_DESC,
		r.RESOURCE_TYPE, r.RESOURCE_STRING,
		r.IS_ENABLED,
		r.SORT_INDEX,
		r.SHOW_NAV, r.PARENT_ID,
		r.GRADE, r.PRJ_TYPE, r.CREATE_USER, r.CREATED_AT, r.UPDATED_AT
		from
		M_RESOURCE r
		where r.RESOURCE_ID =
		#{resourceId,jdbcType=INTEGER} and
		r.PRJ_TYPE = '0'
	</select>

	<select id="queryParentIdById" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select PARENT_ID from M_RESOURCE where RESOURCE_ID =
		#{resourceId}
	</select>

	<update id="deleteResourceById" parameterType="java.lang.Integer">
		update M_RESOURCE
		set IS_ENABLED = 0 where RESOURCE_ID = #{resourceId,jdbcType=INTEGER}
	</update>

	<insert id="insertResource" parameterType="com.eleme.domain.ops.user.Resource">
		insert into M_RESOURCE
		(
		RESOURCE_NAME, RESOURCE_DESC,
		RESOURCE_TYPE,
		RESOURCE_STRING,
		IS_ENABLED,
		SORT_INDEX, SHOW_NAV, PARENT_ID,
		GRADE, PRJ_TYPE,
		CREATE_USER, CREATED_AT, UPDATED_AT
		)
		values (
		#{resourceName,jdbcType=VARCHAR}, #{resourceDesc,jdbcType=VARCHAR},
		#{resourceType,jdbcType=VARCHAR}, #{resourceString,jdbcType=VARCHAR},
		#{isEnabled,jdbcType=CHAR},
		#{sortIndex,jdbcType=INTEGER},
		#{showNav,jdbcType=CHAR}, #{parentId,jdbcType=INTEGER},
		#{grade,jdbcType=CHAR}, #{prjType,jdbcType=CHAR},
		#{createUser,jdbcType=INTEGER},
		#{createdAt,jdbcType=TIMESTAMP},
		#{updatedAt,jdbcType=TIMESTAMP}
		)
	</insert>

	<update id="updateResourceById" parameterType="com.eleme.domain.ops.user.Resource">
		update M_RESOURCE
		set RESOURCE_NAME = #{resourceName,jdbcType=VARCHAR},
		RESOURCE_DESC = #{resourceDesc,jdbcType=VARCHAR},
		RESOURCE_TYPE =
		#{resourceType,jdbcType=VARCHAR},
		RESOURCE_STRING =
		#{resourceString,jdbcType=VARCHAR},
		IS_ENABLED =
		#{isEnabled,jdbcType=CHAR},
		SORT_INDEX = #{sortIndex,jdbcType=INTEGER},
		SHOW_NAV = #{showNav,jdbcType=CHAR},
		PARENT_ID =
		#{parentId,jdbcType=INTEGER},
		GRADE = #{grade,jdbcType=CHAR},
		<!-- PRJ_TYPE = #{prjType,jdbcType=CHAR}, CREATE_USER = #{createUser,jdbcType=INTEGER}, 
			CREATED_AT = #{createdAt,jdbcType=TIMESTAMP}, -->
		UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP}
		where RESOURCE_ID =
		#{resourceId,jdbcType=INTEGER}
	</update>
	<select id="getResourceListByIds" resultMap="ResourceResultMap">
		select
		<include refid="Resource_Column_List" />
		from M_RESOURCE
		where RESOURCE_ID in
		<foreach collection="resourceIds" item="resourceId" open="("
			separator="," close=")">
			#{resourceId}
		</foreach>
	</select>

	<!-- <insert id="insertResourceBatch">
		insert into M_RESOURCE(RESOURCE_NAME, RESOURCE_DESC,RESOURCE_TYPE,
		RESOURCE_STRING,IS_ENABLED, SORT_INDEX, SHOW_NAV, PARENT_ID, GRADE,
		CREATE_USER)
		values
		<foreach collection="list" item="resource" separator=",">
			(#{resource.resourceName}, #{resource.resourceDesc},
			#{resource.resourceType}, #{resource.resourceString},
			#{resource.isEnabled},
			#{resource.sortIndex}, #{resource.showNav},
			#{resource.parentId},
			IFNULL ((select m1.RESOURCE_ID
			from M_RESOURCE m1 left join M_RESOURCE m2
			on m1.RESOURCE_ID = m2.RESOURCE_ID
			where m1.RESOURCE_NAME = #{resource.parentName}
			and m1.RESOURCE_STRING = #{resource.parentString}
			) , 0),
			#{resource.grade}, #{resource.createUser})
		</foreach>
	</insert> -->
	
	<select id="getResourceId" resultType="java.lang.Integer">
		select RESOURCE_ID
		from M_RESOURCE
		where RESOURCE_NAME = #{parentName}
		and RESOURCE_STRING = #{parentString}
		limit 1
	</select>
	
	<insert id="insertResourceInfo" parameterType="com.eleme.domain.ops.user.Resource">
		insert into M_RESOURCE(RESOURCE_NAME, RESOURCE_DESC,RESOURCE_TYPE,
		RESOURCE_STRING,IS_ENABLED, SORT_INDEX, SHOW_NAV, PARENT_ID, GRADE,
		CREATE_USER)
		values
		(#{resourceName}, #{resourceDesc},
			#{resourceType}, #{resourceString},
			#{isEnabled},
			#{sortIndex}, #{showNav},
			#{parentId},
			#{grade}, #{createUser})
	</insert>

</mapper>