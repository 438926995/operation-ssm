<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eleme.mapper.mart.basic.MBasicDataMapper">
	<resultMap id="BaseResultMap" type="com.eleme.domain.mart.basic.MBasicData">
		<id column="TYPE_CD" property="typeCd" jdbcType="VARCHAR" />
		<id column="TYPE_ID" property="typeId" jdbcType="INTEGER" />
		<result column="TYPE_ID_NAME" property="typeIdName" jdbcType="VARCHAR" />
		<result column="TYPE_CD_NAME" property="typeCdName" jdbcType="VARCHAR" />
		<result column="SORT_INDEX" property="sortIndex" jdbcType="INTEGER" />
		<result column="IS_VISIBLE" property="isVisible" jdbcType="INTEGER" />
		<result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		TYPE_CD, TYPE_ID, TYPE_ID_NAME, TYPE_CD_NAME, SORT_INDEX,
		IS_VISIBLE, REMARKS
	</sql>

	<select id="selectById" resultMap="BaseResultMap"
		parameterType="com.eleme.domain.mart.basic.MBasicDataKey">
		select
		<include refid="Base_Column_List" />
		from M_BASIC_DATA
		<where>
			<if test="typeCd != null and typeCd != ''">
				and TYPE_CD = #{typeCd}
			</if>
			<if test="typeId != null">
				and TYPE_ID = #{typeId}
			</if>
		</where>
	</select>

	<insert id="insert" parameterType="com.eleme.domain.mart.basic.MBasicData">
		insert into M_BASIC_DATA
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="typeCd != null">
				TYPE_CD,
			</if>
			<if test="typeId != null">
				TYPE_ID,
			</if>
			<if test="typeIdName != null">
				TYPE_ID_NAME,
			</if>
			<if test="typeCdName != null">
				TYPE_CD_NAME,
			</if>
			<if test="sortIndex != null">
				SORT_INDEX,
			</if>
			<if test="isVisible != null">
				IS_VISIBLE,
			</if>
			<if test="remarks != null">
				REMARKS,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="typeCd != null">
				#{typeCd},
			</if>
			<if test="typeId != null">
				#{typeId},
			</if>
			<if test="typeIdName != null">
				#{typeIdName},
			</if>
			<if test="typeCdName != null">
				#{typeCdName},
			</if>
			<if test="sortIndex != null">
				#{sortIndex},
			</if>
			<if test="isVisible != null">
				#{isVisible},
			</if>
			<if test="remarks != null">
				#{remarks},
			</if>
		</trim>
	</insert>

	<update id="updateById" parameterType="com.eleme.domain.mart.basic.MBasicData">
		update M_BASIC_DATA
		<set>
			<if test="typeIdName != null">
				TYPE_ID_NAME = #{typeIdName},
			</if>
			<if test="typeCdName != null">
				TYPE_CD_NAME = #{typeCdName},
			</if>
			<if test="sortIndex != null">
				SORT_INDEX = #{sortIndex},
			</if>
			<if test="isVisible != null">
				IS_VISIBLE = #{isVisible},
			</if>
			<if test="remarks != null">
				REMARKS = #{remarks},
			</if>
		</set>
		<where>
			TYPE_ID = #{typeId}
			<if test="typeCd != null and typeCd != '' ">
				and TYPE_CD = #{typeCd}
			</if>
		</where>

	</update>
	<!-- 查询基本数据总数 -->
	<select id="selectCount" parameterType="com.eleme.domain.mart.basic.MBasicData"
		resultType="java.lang.Integer">
		select count(*)
		from M_BASIC_DATA
		where 1 = 1
		<if test="typeId != null">
			and TYPE_ID = #{typeId}
		</if>
		<if test="typeCd != null and typeCd != '' ">
			and TYPE_CD = #{typeCd}
		</if>
		<if test="typeCdName != null and typeCdName != '' ">
			and TYPE_CD_NAME like concat('%', #{typeCdName}, '%')
		</if>
		<if test="typeIdName != null and typeIdName != '' ">
			and TYPE_CD_NAME like concat('%', #{typeIdName}, '%')
		</if>
	</select>
	<!-- 查询基本数据的集合，分页 -->
	<select id="getMBasicDataList" parameterType="com.eleme.domain.mart.basic.MBasicData"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from M_BASIC_DATA
		<where>
			<if test="typeCd != null and typeCd != ''">
				and TYPE_CD = #{typeCd}
			</if>
			<if test="typeId != null">
				and TYPE_ID = #{typeId}
			</if>
			<if test="typeCdName != null and typeCdName != '' ">
				and TYPE_CD_NAME like concat('%', #{typeCdName}, '%')
			</if>
			<if test="typeIdName != null and typeIdName != '' ">
				and TYPE_ID_NAME like concat('%', #{typeIdName}, '%')
			</if>
		</where>
		order by SORT_INDEX
		<if test="startRecord != null and startRecord != '' ">
			limit #{startRecord}, #{pageSize}
		</if>
	</select>
	<!-- 查询最大的TYPE_CD 加一 -->
	<select id="getMaxTypeCdAddOne" resultType="java.lang.String"
		parameterType="boolean">
		select max(type_cd)+1
		from M_BASIC_DATA
		<where>
			<if test="_parameter == true">
				TYPE_ID = 0
			</if>
			<if test="_parameter == false">
				TYPE_ID != 0
			</if>
		</where>
	</select>
	<!-- 根据Id得到最大的排序号 -->
	<select id="getMaxSortIndexById" parameterType="com.eleme.domain.mart.basic.MBasicDataKey" resultType="java.lang.Integer">
		select IFNULL(max(SORT_INDEX), 0)
		from M_BASIC_DATA
		<where>
			<if test="typeId != null">
				and TYPE_ID = #{typeId}
			</if>
			<if test="typeCd != null and typeCd != '' ">
				and TYPE_CD = #{typeCd}
			</if>
		</where>
	</select>
	<!-- 根据名字查找是否有该记录 -->
	<select id="findRecordByName" parameterType="com.eleme.domain.mart.basic.MBasicData" resultType="java.lang.Integer">
		select count(*)
		from M_BASIC_DATA
		where TYPE_CD_NAME = #{typeCdName}
	</select>
</mapper>